// Generated by CoffeeScript 1.6.3
(function() {
  var Face, run_face,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  Face = (function() {
    function Face() {
      this.showCamera = __bind(this.showCamera, this);
      this.cameraErrorCallback = __bind(this.cameraErrorCallback, this);
    }

    Face.prototype.setVideoElement = function(video) {
      this.video = video;
      return this;
    };

    Face.prototype.autoCreateVideo = function() {
      this.video = document.createElement('video');
      this.video.width = 640;
      this.video.height = 360;
      this.video.autoplay = true;
      return this;
    };

    Face.prototype.getUserMedia = function() {
      return navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;
    };

    Face.prototype.hasGetUserMedia = function() {
      if (this.getUserMedia()) {
        return true;
      } else {
        return false;
      }
    };

    Face.prototype.cameraErrorCallback = function(e) {
      return console.log('Reeeejected!', e);
    };

    Face.prototype.showCamera = function(localMediaStream) {
      this.video.src = window.URL.createObjectURL(localMediaStream);
      return this.video.onloadedmetadata = function(e) {};
    };

    Face.prototype.startVideo = function(params, callback, errorCallback) {
      if (navigator.webkitGetUserMedia) {
        return navigator.webkitGetUserMedia(params, callback, errorCallback);
      } else if (navigator.mozGetUserMedia) {
        return navigator.mozGetUserMedia(params, callback, errorCallback);
      } else if (navigator.getUserMedia) {
        return navigator.getUserMedia(params, callback, errorCallback);
      }
    };

    Face.prototype.doFace = function() {
      if (this.hasGetUserMedia()) {
        this.startVideo({
          video: true
        }, this.showCamera, this.cameraErrorCallback);
      } else {
        alert('getUserMedia() is not supported in your browser');
      }
      return this;
    };

    return Face;

  })();

  run_face = function() {
    var face, video;
    video = document.querySelector('video');
    return face = new Face().setVideoElement(video).doFace();
  };

  window.LL = window.LL || {};

  window.LL.Face = Face;

  window.LL.run_face = run_face;

}).call(this);
